<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <RootNamespace>TensorFlowSharp</RootNamespace>
    <AssemblyName>TensorFlowSharp</AssemblyName>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DebugType>full</DebugType>
    <DocumentationFile>bin\Debug\TensorFlowSharp.xml</DocumentationFile>
    <GenerateDocumentationFile Condition=" '$(Configuration)' == 'Release' ">true</GenerateDocumentationFile>
    <ReleaseVersion>0.1</ReleaseVersion>
    <TensorFlowRuntimeVersion>1.15.0</TensorFlowRuntimeVersion>
  </PropertyGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
    <PackageId>TensorFlowSharp-Lite</PackageId>
    <PackageVersion>1.15.3</PackageVersion>
    <Authors>Miguel de Icaza</Authors>
    <PackageLicenseUrl>https://github.com/migueldeicaza/TensorFlowSharp/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/migueldeicaza/TensorFlowSharp/</PackageProjectUrl>
    <PackageTags>machine-learning, tensorflow, xamarin, c#, f#</PackageTags>
    <Description>.NET Bindings for TensorFlow</Description>
    <Owners>Miguel de Icaza</Owners>
    <Summary>.NET API for TensorFlow, Google's Machine Intelligence framework</Summary>
    <PackageReleaseNotes>1.15.3: Fixed libtensorflow.dll not being copied to output directory on .NET Core; 1.15.1: Add a Runner.Run method that does not allocate - contribution from Enrico Minack; 1.15.0: Updated to TensorFlow 1.15; 1.13.1: Fixes boolean and ushort tensor construction fixes from Enrico Minack;  Runner.AddInput fixes from Colin Versteeg; captainst provided a convenience function for the samples; Zeeshan Ahmed added AdamOptimizer; Kevin Malenfant fixes a few bugs; Enrico Minack added support for mutable tensors;  1.13.0: An optimization implementation now exists for C#, contributed by Zeeshan Ahmed from the Microsoft data science team (RMSProp, SGD optimizer bindings);  TFSession now has a static method for loading models;  New methods for loading strings into tensors (also Zeeshan)</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="Ops\" />
  </ItemGroup>
</Project>
